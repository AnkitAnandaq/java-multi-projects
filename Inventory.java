import java.util.*;

class Product {
    private static int lastProductId = 100;  
    private int productId;
    private String name;
    private int quantity;
    private double price;

    public Product(String name, int quantity, double price) {
        this.productId = ++lastProductId;
        this.name = name;
        this.quantity = quantity;
        this.price = price;
    }

    public int getProductId() {
        return productId;
    }

    public String getName() {
        return name;
    }

    public int getQuantity() {
        return quantity;
    }

    public double getPrice() {
        return price;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public void displayProduct() {
        System.out.println("üÜî Product ID: " + productId);
        System.out.println("üì¶ Name: " + name);
        System.out.println("üìä Quantity: " + quantity);
        System.out.println("üí≤ Price: ‚Çπ" + price);
        System.out.println("-------------------------");
    }
}

class Inventory {
    private static List<Product> productList = new ArrayList<>();
    private static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n===== üè™ Inventory Management System =====");
            System.out.println("1Ô∏è‚É£ Add Product");
            System.out.println("2Ô∏è‚É£ Remove Product");
            System.out.println("3Ô∏è‚É£ Update Product");
            System.out.println("4Ô∏è‚É£ View All Products");
            System.out.println("5Ô∏è‚É£ Search Product");
            System.out.println("6Ô∏è‚É£ Exit");
            System.out.print("üîπ Enter choice: ");
            
            int choice = sc.nextInt();
            sc.nextLine();  

            switch (choice) {
                case 1:
                    addProduct();
                    break;
                case 2:
                    removeProduct();
                    break;
                case 3:
                    updateProduct();
                    break;
                case 4:
                    viewAllProducts();
                    break;
                case 5:
                    searchProduct();
                    break;
                case 6:
                    System.out.println("‚úÖ Exiting Inventory System. Thank you!");
                    return;
                default:
                    System.out.println("‚ùå Invalid choice! Enter between 1-6.");
            }
        }
    }

    public static void addProduct() {
        System.out.print("üì¶ Enter Product Name: ");
        String name = sc.nextLine();
        System.out.print("üìä Enter Quantity: ");
        int quantity = sc.nextInt();
        System.out.print("üí≤ Enter Price: ");
        double price = sc.nextDouble();
        Product product = new Product(name, quantity, price);
        productList.add(product);
        System.out.println("‚úÖ Product Added Successfully! Product ID: " + product.getProductId());
    }

    public static void removeProduct() {
        Product product = findProduct();
        if (product != null) {
            productList.remove(product);
            System.out.println("‚úÖ Product Removed Successfully!");
        }
    }

    public static void updateProduct() {
        Product product = findProduct();
        if (product != null) {
            System.out.print("üìä Enter New Quantity: ");
            int quantity = sc.nextInt();
            System.out.print("üí≤ Enter New Price: ");
            double price = sc.nextDouble();
            product.setQuantity(quantity);
            product.setPrice(price);
            System.out.println("‚úÖ Product Updated Successfully!");
        }
    }

    public static void viewAllProducts() {
        if (productList.isEmpty()) {
            System.out.println("‚ùå No Products Available!");
            return;
        }
        System.out.println("\n===== üìã Product List =====");
        for (Product p : productList) {
            p.displayProduct();
        }
    }

    public static void searchProduct() {
        Product product = findProduct();
        if (product != null) {
            product.displayProduct();
        }
    }

    private static Product findProduct() {
        System.out.print("üî¢ Enter Product ID: ");
        int id = sc.nextInt();
        for (Product p : productList) {
            if (p.getProductId() == id) {
                return p;
            }
        }
        System.out.println("‚ùå Product Not Found!");
        return null;
    }
}
